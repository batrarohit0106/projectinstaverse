{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\client\\\\src\\\\components\\\\AuthForm\\\\AuthForm.js\";\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { Form, Input, Button, Card, Layout, Typography } from \"antd\";\n// import { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\n// import { useDispatch } from 'react-redux';\n// import { login, signup } from '../../actions/authentication';\n\n// import styles from './styles';\n\n// const { Title } = Typography;\n\n// function AuthForm() {\n//     const user = null;\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n\n//     const [form] = Form.useForm();\n//     const [isLogin, setIsLogin] = useState(true);\n\n//     const onSubmit = (formValues) => {\n//         if (isLogin) {\n//             dispatch(login(formValues, navigate));\n//         } else {\n//             dispatch(signup(formValues, navigate));\n//         }\n//     };\n\n//     const switchMode = () => {\n//         setIsLogin(prevIsLogin => !prevIsLogin);\n//     };\n\n//     return (\n//         <Layout style={styles.container}>\n//             <Card\n//                 style={styles.card}\n//                 title={\n//                     <Title level={4} style={{ textAlign: \"center\" }}>\n//                         { isLogin ? \"Login to\" : \"Join\" } Instaverse\n//                     </Title>\n//                 }\n//             >\n//                 <Form\n//                     name=\"authform\"\n//                     form={form}\n//                     size=\"large\"\n//                     wrapperCol={{ span: 20, offset: 2 }}\n//                     onFinish={onSubmit}\n//                 >\n//                     {isLogin || (\n//                         <>\n//                             <Form.Item\n//                                 name=\"username\"\n//                                 rules={[\n//                                     {\n//                                         required: true,\n//                                         message: \"Please enter your username\"\n//                                     }\n//                                 ]}\n//                             >\n//                                 <Input prefix={<UserOutlined />} placeholder=\"username\" />\n//                             </Form.Item>\n//                         </>\n//                     )}\n//                     <Form.Item\n//                         name=\"email\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: \"Please enter valid email address\"\n//                             }\n//                         ]}\n//                     >\n//                         <Input type=\"email\" prefix={<MailOutlined />} placeholder=\"email address\" />\n//                     </Form.Item>\n//                     <Form.Item\n//                         name=\"password\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: \"Please enter your password\"\n//                             }\n//                         ]}\n//                     >\n//                         <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"password\" />\n//                     </Form.Item>\n//                     {isLogin || (\n//                         <Form.Item\n//                             name=\"confirmPassword\"\n//                             rules={[\n//                                 {\n//                                     required: true,\n//                                     message: \"Please repeat your password\"\n//                                 }\n//                             ]}\n//                         >\n//                             <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"Confirm Password\" />\n//                         </Form.Item>\n//                     )}\n//                     <Form.Item>\n//                         <Button htmlType='submit' typeof='primary'>\n//                             {isLogin ? \"Log In\" : \"Join\" }\n//                         </Button>\n//                         <span style={{ margin: \"0 10px 0px 20px\" }}>Or</span>\n//                         <Button type='link' onClick={switchMode}>\n//                             {isLogin ? \"Register now\" : \"have an account?\"}\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </Layout>\n//     )\n// }\n\n// export default AuthForm\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthForm() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"AuthForm\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AuthForm","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/project/client/src/components/AuthForm/AuthForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Form, Input, Button, Card, Layout, Typography } from \"antd\";\r\n// import { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\n// import { useDispatch } from 'react-redux';\r\n// import { login, signup } from '../../actions/authentication';\r\n\r\n// import styles from './styles';\r\n\r\n// const { Title } = Typography;\r\n\r\n// function AuthForm() {\r\n//     const user = null;\r\n//     const navigate = useNavigate();\r\n//     const dispatch = useDispatch();\r\n\r\n//     const [form] = Form.useForm();\r\n//     const [isLogin, setIsLogin] = useState(true);\r\n\r\n//     const onSubmit = (formValues) => {\r\n//         if (isLogin) {\r\n//             dispatch(login(formValues, navigate));\r\n//         } else {\r\n//             dispatch(signup(formValues, navigate));\r\n//         }\r\n//     };\r\n\r\n//     const switchMode = () => {\r\n//         setIsLogin(prevIsLogin => !prevIsLogin);\r\n//     };\r\n\r\n//     return (\r\n//         <Layout style={styles.container}>\r\n//             <Card\r\n//                 style={styles.card}\r\n//                 title={\r\n//                     <Title level={4} style={{ textAlign: \"center\" }}>\r\n//                         { isLogin ? \"Login to\" : \"Join\" } Instaverse\r\n//                     </Title>\r\n//                 }\r\n//             >\r\n//                 <Form\r\n//                     name=\"authform\"\r\n//                     form={form}\r\n//                     size=\"large\"\r\n//                     wrapperCol={{ span: 20, offset: 2 }}\r\n//                     onFinish={onSubmit}\r\n//                 >\r\n//                     {isLogin || (\r\n//                         <>\r\n//                             <Form.Item\r\n//                                 name=\"username\"\r\n//                                 rules={[\r\n//                                     {\r\n//                                         required: true,\r\n//                                         message: \"Please enter your username\"\r\n//                                     }\r\n//                                 ]}\r\n//                             >\r\n//                                 <Input prefix={<UserOutlined />} placeholder=\"username\" />\r\n//                             </Form.Item>\r\n//                         </>\r\n//                     )}\r\n//                     <Form.Item\r\n//                         name=\"email\"\r\n//                         rules={[\r\n//                             {\r\n//                                 required: true,\r\n//                                 message: \"Please enter valid email address\"\r\n//                             }\r\n//                         ]}\r\n//                     >\r\n//                         <Input type=\"email\" prefix={<MailOutlined />} placeholder=\"email address\" />\r\n//                     </Form.Item>\r\n//                     <Form.Item\r\n//                         name=\"password\"\r\n//                         rules={[\r\n//                             {\r\n//                                 required: true,\r\n//                                 message: \"Please enter your password\"\r\n//                             }\r\n//                         ]}\r\n//                     >\r\n//                         <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"password\" />\r\n//                     </Form.Item>\r\n//                     {isLogin || (\r\n//                         <Form.Item\r\n//                             name=\"confirmPassword\"\r\n//                             rules={[\r\n//                                 {\r\n//                                     required: true,\r\n//                                     message: \"Please repeat your password\"\r\n//                                 }\r\n//                             ]}\r\n//                         >\r\n//                             <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"Confirm Password\" />\r\n//                         </Form.Item>\r\n//                     )}\r\n//                     <Form.Item>\r\n//                         <Button htmlType='submit' typeof='primary'>\r\n//                             {isLogin ? \"Log In\" : \"Join\" }\r\n//                         </Button>\r\n//                         <span style={{ margin: \"0 10px 0px 20px\" }}>Or</span>\r\n//                         <Button type='link' onClick={switchMode}>\r\n//                             {isLogin ? \"Register now\" : \"have an account?\"}\r\n//                         </Button>\r\n//                     </Form.Item>\r\n//                 </Form>\r\n//             </Card>\r\n//         </Layout>\r\n//     )\r\n// }\r\n\r\n// export default AuthForm\r\nimport React from 'react'\r\n\r\nfunction AuthForm() {\r\n  return (\r\n    <div>AuthForm</div>\r\n  )\r\n}\r\n\r\nexport default AuthForm"],"mappingszB,SAASC,QAAQA,CAAA,EAAG;EAClB,oBACED,OAAA;IAAAE,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB;AAACC,EAAA,GAJQN,QAAQ;AAMjB,eAAeA,QAAQ;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}