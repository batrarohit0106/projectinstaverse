{"ast":null,"code":"import _slicedToArray from\"E:/snapbliss/projectinstaverse/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{Card,Tooltip,Typography,Image}from\"antd\";import{EditOutlined,DeleteTwoTone,HeartTwoTone}from\"@ant-design/icons\";import styles from'./styles';import moment from'moment';import{useDispatch}from\"react-redux\";import{deleteStory,likeStory}from\"../../actions/stories\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Meta=Card.Meta;var Link=Typography.Link,Paragraph=Typography.Paragraph,Text=Typography.Text;// function Story({story,setSelectedId }){\n//     const dispatch=useDispatch();\n//     const [expand,setExpand]=useState(true);\n//     return (\n//        <Card \n//        style={styles.card}\n//        cover={<Image src={story.image}/>}\n//         actions={[\n//             <div style={styles.actions}>\n//                 <Tooltip \n//             placement='top'\n//             title='Like'\n//             color='magenta'\n//             onClick={()=>{}}\n//             >\n//                 <HeartTwoTone twoToneColor=\"magenta\"/>\n//                 &nbsp; {story.likes} &nbsp;\n//             </Tooltip>\n//             </div>,\n//             <Tooltip \n//             placement='top'\n//             title='Edit'\n//             >\n//                 <EditOutlined onClick={()=>{\n//                     setSelectedId(story._id);\n//                     console.log(story._id);\n//                 }}/>\n//             </Tooltip>,\n//             <Tooltip \n//             placement='top'\n//             title='Delete'\n//             color='red'\n//             >\n//                 <DeleteTwoTone twoToneColor=\"red\" onClick={()=>{\n//                     dispatch(deleteStory(story._id))\n//                 }}/>\n//             </Tooltip>\n//         ]}\n//         >\n//             <Meta title={story.username} />\n//       <Paragraph\n//         style={{ margin: 0 }}\n//         ellipsis={{\n//           rows: 2,\n//           expandable: true,\n//           symbol: \"more\",\n//           onExpand: () => {\n//             setExpand(true);\n//           },\n//           onEllipsis: () => {\n//             setExpand(false);\n//           }\n//         }}\n//       >\n//         {story.caption} \n//       </Paragraph>\n//       {expand ?\n//         <Link href=\"#\">{story.tags.split(\" \").map((tag) => `#${tag} `)}</Link>\n//         : null }\n//         <br />\n//         <Text type=\"secondary\">{moment(story.postDate).fromNow()}</Text>\n//     </Card>\n//     )\n// }\n// export default Story;\nfunction Story(_ref){var _user$result;var story=_ref.story,setSelectedId=_ref.setSelectedId;var dispatch=useDispatch();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),expand=_useState2[0],setExpand=_useState2[1];var user=JSON.parse(localStorage.getItem(\"profile\"));var cardActions=[/*#__PURE__*/_jsx(\"div\",{style:styles.actions,children:/*#__PURE__*/_jsxs(Tooltip,{placement:\"top\",title:\"Like\",color:\"magenta\",onClick:function onClick(){dispatch(likeStory(story._id));},children:[/*#__PURE__*/_jsx(HeartTwoTone,{twoToneColor:\"magenta\"}),\"\\xA0 \",story.likes.length,\" \\xA0\"]})}),/*#__PURE__*/_jsx(Tooltip,{placement:\"top\",title:\"Edit\",children:/*#__PURE__*/_jsx(EditOutlined,{onClick:function onClick(){setSelectedId(story._id);}})}),/*#__PURE__*/_jsx(Tooltip,{placement:\"top\",title:\"Delete\",color:\"red\",children:/*#__PURE__*/_jsx(DeleteTwoTone,{twoToneColor:\"red\",onClick:function onClick(){return dispatch(deleteStory(story._id));}})})];return/*#__PURE__*/_jsxs(Card,{style:styles.card,cover:/*#__PURE__*/_jsx(Image,{src:story.image}),actions:(user===null||user===void 0?void 0:(_user$result=user.result)===null||_user$result===void 0?void 0:_user$result._id)===(story===null||story===void 0?void 0:story.userId)?cardActions:user!==null&&user!==void 0&&user.result?cardActions.slice(0,1):null,children:[/*#__PURE__*/_jsx(Meta,{title:story.username}),/*#__PURE__*/_jsx(Paragraph,{style:{margin:0},ellipsis:{rows:2,expandable:true,symbol:\"more\",onExpand:function onExpand(){setExpand(true);},onEllipsis:function onEllipsis(){setExpand(false);}},children:story.caption}),expand?/*#__PURE__*/_jsx(Link,{href:\"#\",children:story.tags.split(\" \").map(function(tag){return\"#\".concat(tag,\" \");})}):null,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:moment(story.postDate).fromNow()})]});}export default Story;","map":{"version":3,"names":["React","useState","Card","Tooltip","Typography","Image","EditOutlined","DeleteTwoTone","HeartTwoTone","styles","moment","useDispatch","deleteStory","likeStory","jsx","_jsx","jsxs","_jsxs","Meta","Link","Paragraph","Text","Story","_ref","_user$result","story","setSelectedId","dispatch","_useState","_useState2","_slicedToArray","expand","setExpand","user","JSON","parse","localStorage","getItem","cardActions","style","actions","children","placement","title","color","onClick","_id","twoToneColor","likes","length","card","cover","src","image","result","userId","slice","username","margin","ellipsis","rows","expandable","symbol","onExpand","onEllipsis","caption","href","tags","split","map","tag","concat","type","postDate","fromNow"],"sources":["E:/snapbliss/projectinstaverse/client/src/components/Story/Story.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport {Card, Tooltip,Typography,Image} from \"antd\";\r\nimport {EditOutlined,DeleteTwoTone,HeartTwoTone} from \"@ant-design/icons\";\r\nimport styles from './styles';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteStory,likeStory } from \"../../actions/stories\";\r\n\r\nconst {Meta}=Card;\r\nconst {Link,Paragraph,Text}=Typography;\r\n\r\n// function Story({story,setSelectedId }){\r\n//     const dispatch=useDispatch();\r\n//     const [expand,setExpand]=useState(true);\r\n//     return (\r\n//        <Card \r\n//        style={styles.card}\r\n//        cover={<Image src={story.image}/>}\r\n//         actions={[\r\n//             <div style={styles.actions}>\r\n//                 <Tooltip \r\n//             placement='top'\r\n//             title='Like'\r\n//             color='magenta'\r\n//             onClick={()=>{}}\r\n//             >\r\n//                 <HeartTwoTone twoToneColor=\"magenta\"/>\r\n//                 &nbsp; {story.likes} &nbsp;\r\n//             </Tooltip>\r\n//             </div>,\r\n//             <Tooltip \r\n//             placement='top'\r\n//             title='Edit'\r\n//             >\r\n//                 <EditOutlined onClick={()=>{\r\n//                     setSelectedId(story._id);\r\n//                     console.log(story._id);\r\n//                 }}/>\r\n//             </Tooltip>,\r\n//             <Tooltip \r\n//             placement='top'\r\n//             title='Delete'\r\n//             color='red'\r\n//             >\r\n//                 <DeleteTwoTone twoToneColor=\"red\" onClick={()=>{\r\n//                     dispatch(deleteStory(story._id))\r\n//                 }}/>\r\n//             </Tooltip>\r\n//         ]}\r\n//         >\r\n//             <Meta title={story.username} />\r\n//       <Paragraph\r\n//         style={{ margin: 0 }}\r\n//         ellipsis={{\r\n//           rows: 2,\r\n//           expandable: true,\r\n//           symbol: \"more\",\r\n//           onExpand: () => {\r\n//             setExpand(true);\r\n//           },\r\n//           onEllipsis: () => {\r\n//             setExpand(false);\r\n//           }\r\n//         }}\r\n//       >\r\n//         {story.caption} \r\n//       </Paragraph>\r\n//       {expand ?\r\n//         <Link href=\"#\">{story.tags.split(\" \").map((tag) => `#${tag} `)}</Link>\r\n//         : null }\r\n//         <br />\r\n//         <Text type=\"secondary\">{moment(story.postDate).fromNow()}</Text>\r\n//     </Card>\r\n//     )\r\n// }\r\n// export default Story;\r\nfunction Story({ story, setSelectedId }) {\r\n  const dispatch = useDispatch();\r\n  const [expand, setExpand] = useState(true);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n\r\n  const cardActions = [\r\n    <div style={styles.actions}>\r\n      <Tooltip\r\n        placement='top'\r\n        title='Like'\r\n        color='magenta'\r\n        onClick={() => { dispatch(likeStory(story._id)) }}\r\n      >\r\n        <HeartTwoTone twoToneColor=\"magenta\" />\r\n        &nbsp; {story.likes.length} &nbsp;\r\n      </Tooltip>\r\n    </div>,\r\n    <Tooltip\r\n      placement='top'\r\n      title='Edit'\r\n    >\r\n      <EditOutlined onClick={() => {\r\n        setSelectedId(story._id);\r\n      }} />\r\n    </Tooltip>,\r\n    <Tooltip\r\n      placement='top'\r\n      title='Delete'\r\n      color='red'\r\n    >\r\n      <DeleteTwoTone twoToneColor=\"red\" onClick={() => dispatch(deleteStory(story._id))} />\r\n    </Tooltip>\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      style={styles.card}\r\n      cover={<Image src={story.image} />}\r\n      actions={\r\n        user?.result?._id === story?.userId ?\r\n          cardActions :\r\n          user?.result ?\r\n            cardActions.slice(0, 1)\r\n            : null\r\n      }\r\n    >\r\n      <Meta title={story.username} />\r\n      <Paragraph\r\n        style={{ margin: 0 }}\r\n        ellipsis={{\r\n          rows: 2,\r\n          expandable: true,\r\n          symbol: \"more\",\r\n          onExpand: () => {\r\n            setExpand(true);\r\n          },\r\n          onEllipsis: () => {\r\n            setExpand(false);\r\n          }\r\n        }}\r\n      >\r\n        {story.caption}\r\n      </Paragraph>\r\n      {expand ?\r\n        <Link href=\"#\">{story.tags.split(\" \").map((tag) => `#${tag} `)}</Link>\r\n        : null }\r\n        <br />\r\n        <Text type=\"secondary\">{moment(story.postDate).fromNow()}</Text>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Story;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}