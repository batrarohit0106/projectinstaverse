[{"E:\\snapbliss\\projectinstaverse\\client\\src\\index.js":"1","E:\\snapbliss\\projectinstaverse\\client\\src\\App.js":"2","E:\\snapbliss\\projectinstaverse\\client\\src\\reducers\\index.js":"3","E:\\snapbliss\\projectinstaverse\\client\\src\\styles.js":"4","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\Home\\Home.js":"5","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\AuthForm\\AuthForm.js":"6","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\AppBar\\AppBar.js":"7","E:\\snapbliss\\projectinstaverse\\client\\src\\reducers\\authentication.js":"8","E:\\snapbliss\\projectinstaverse\\client\\src\\reducers\\stories.js":"9","E:\\snapbliss\\projectinstaverse\\client\\src\\actions\\stories.js":"10","E:\\snapbliss\\projectinstaverse\\client\\src\\actions\\authentication.js":"11","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\Home\\styles.js":"12","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\AuthForm\\styles.js":"13","E:\\snapbliss\\projectinstaverse\\client\\src\\constants\\actionTypes.js":"14","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\AppBar\\styles.js":"15","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryForm\\index.js":"16","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryList\\index.js":"17","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryForm\\StoryForm.js":"18","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryList\\StoryList.js":"19","E:\\snapbliss\\projectinstaverse\\client\\src\\api\\index.js":"20","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryForm\\styles.js":"21","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\Story\\Story.js":"22","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\Story\\styles.js":"23"},{"size":541,"mtime":1702300688054,"results":"24","hashOfConfig":"25"},{"size":792,"mtime":1702300688038,"results":"26","hashOfConfig":"25"},{"size":195,"mtime":1702300688054,"results":"27","hashOfConfig":"25"},{"size":757,"mtime":1702300688054,"results":"28","hashOfConfig":"25"},{"size":879,"mtime":1702300688038,"results":"29","hashOfConfig":"25"},{"size":8425,"mtime":1702300688038,"results":"30","hashOfConfig":"25"},{"size":2097,"mtime":1702302045220,"results":"31","hashOfConfig":"25"},{"size":641,"mtime":1702300688054,"results":"32","hashOfConfig":"25"},{"size":745,"mtime":1702300688054,"results":"33","hashOfConfig":"25"},{"size":1420,"mtime":1702300688038,"results":"34","hashOfConfig":"25"},{"size":743,"mtime":1702300688038,"results":"35","hashOfConfig":"25"},{"size":141,"mtime":1702300688038,"results":"36","hashOfConfig":"25"},{"size":215,"mtime":1702300688038,"results":"37","hashOfConfig":"25"},{"size":343,"mtime":1702300688038,"results":"38","hashOfConfig":"25"},{"size":945,"mtime":1702300688038,"results":"39","hashOfConfig":"25"},{"size":100,"mtime":1702300688038,"results":"40","hashOfConfig":"25"},{"size":100,"mtime":1702300688038,"results":"41","hashOfConfig":"25"},{"size":3533,"mtime":1702303106908,"results":"42","hashOfConfig":"25"},{"size":730,"mtime":1702300688038,"results":"43","hashOfConfig":"25"},{"size":869,"mtime":1702306575119,"results":"44","hashOfConfig":"25"},{"size":258,"mtime":1702300688038,"results":"45","hashOfConfig":"25"},{"size":4258,"mtime":1702300688038,"results":"46","hashOfConfig":"25"},{"size":228,"mtime":1702300688038,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5y3dco",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\snapbliss\\projectinstaverse\\client\\src\\index.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\App.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\reducers\\index.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\styles.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\Home\\Home.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\AuthForm\\AuthForm.js",["120"],[],"// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Form, Input, Button, Card, Layout, Typography } from \"antd\";\r\n// import { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\n// import { useDispatch } from 'react-redux';\r\n// import { login, signup } from '../../actions/authentication';\r\n\r\n// import styles from './styles';\r\n\r\n// const { Title } = Typography;\r\n\r\n// function AuthForm() {\r\n//     const user = null;\r\n//     const navigate = useNavigate();\r\n//     const dispatch = useDispatch();\r\n\r\n//     const [form] = Form.useForm();\r\n//     const [isLogin, setIsLogin] = useState(true);\r\n\r\n//     const onSubmit = (formValues) => {\r\n//         if (isLogin) {\r\n//             dispatch(login(formValues, navigate));\r\n//         } else {\r\n//             dispatch(signup(formValues, navigate));\r\n//         }\r\n//     };\r\n\r\n//     const switchMode = () => {\r\n//         setIsLogin(prevIsLogin => !prevIsLogin);\r\n//     };\r\n\r\n//     return (\r\n//         <Layout style={styles.container}>\r\n//             <Card\r\n//                 style={styles.card}\r\n//                 title={\r\n//                     <Title level={4} style={{ textAlign: \"center\" }}>\r\n//                         { isLogin ? \"Login to\" : \"Join\" } Instaverse\r\n//                     </Title>\r\n//                 }\r\n//             >\r\n//                 <Form\r\n//                     name=\"authform\"\r\n//                     form={form}\r\n//                     size=\"large\"\r\n//                     wrapperCol={{ span: 20, offset: 2 }}\r\n//                     onFinish={onSubmit}\r\n//                 >\r\n//                     {isLogin || (\r\n//                         <>\r\n//                             <Form.Item\r\n//                                 name=\"username\"\r\n//                                 rules={[\r\n//                                     {\r\n//                                         required: true,\r\n//                                         message: \"Please enter your username\"\r\n//                                     }\r\n//                                 ]}\r\n//                             >\r\n//                                 <Input prefix={<UserOutlined />} placeholder=\"username\" />\r\n//                             </Form.Item>\r\n//                         </>\r\n//                     )}\r\n//                     <Form.Item\r\n//                         name=\"email\"\r\n//                         rules={[\r\n//                             {\r\n//                                 required: true,\r\n//                                 message: \"Please enter valid email address\"\r\n//                             }\r\n//                         ]}\r\n//                     >\r\n//                         <Input type=\"email\" prefix={<MailOutlined />} placeholder=\"email address\" />\r\n//                     </Form.Item>\r\n//                     <Form.Item\r\n//                         name=\"password\"\r\n//                         rules={[\r\n//                             {\r\n//                                 required: true,\r\n//                                 message: \"Please enter your password\"\r\n//                             }\r\n//                         ]}\r\n//                     >\r\n//                         <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"password\" />\r\n//                     </Form.Item>\r\n//                     {isLogin || (\r\n//                         <Form.Item\r\n//                             name=\"confirmPassword\"\r\n//                             rules={[\r\n//                                 {\r\n//                                     required: true,\r\n//                                     message: \"Please repeat your password\"\r\n//                                 }\r\n//                             ]}\r\n//                         >\r\n//                             <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"Confirm Password\" />\r\n//                         </Form.Item>\r\n//                     )}\r\n//                     <Form.Item>\r\n//                         <Button htmlType='submit' typeof='primary'>\r\n//                             {isLogin ? \"Log In\" : \"Join\" }\r\n//                         </Button>\r\n//                         <span style={{ margin: \"0 10px 0px 20px\" }}>Or</span>\r\n//                         <Button type='link' onClick={switchMode}>\r\n//                             {isLogin ? \"Register now\" : \"have an account?\"}\r\n//                         </Button>\r\n//                     </Form.Item>\r\n//                 </Form>\r\n//             </Card>\r\n//         </Layout>\r\n//     )\r\n// }\r\n\r\n// export default AuthForm\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport {login,signup} from \"../../actions/authentication\";\r\nimport {Form,Input,Button,Card,Layout,Typography} from \"antd\";\r\nimport styles from './styles';\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nconst {Title}=Typography;\r\nfunction AuthForm() {\r\n    const user=null;\r\n    const navigate=useNavigate();\r\n    const dispatch=useDispatch();\r\n    const [form]=Form.useForm();\r\n    const [isLogin,setIsLogin]=useState(true);\r\n    const onSubmit =(formValues)=>{\r\n        if(isLogin){\r\n            dispatch(login(formValues,navigate));\r\n        }else{\r\n            dispatch(signup(formValues,navigate));\r\n        }\r\n    };\r\n    const switchMode=()=>{\r\n        setIsLogin(prevIsLogin =>!prevIsLogin);\r\n    };\r\n  return (\r\n    <Layout style={styles.container}>\r\n        <Card \r\n        style={styles.card}\r\n        title={\r\n            <Title level={4} style={{textAlign:\"center\"}}>\r\n               {isLogin ?\"Login to\":\"Join\"} Intaverse\r\n            </Title>\r\n        }\r\n        >\r\n         <Form\r\n            name=\"authform\"\r\n            form={form}\r\n            size=\"large\"\r\n            wrapperCol={{span:20,offset:2}}\r\n            onFinish={onSubmit}\r\n         \r\n         >\r\n            {isLogin ||(\r\n                <>\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required:true,\r\n                            message:\"Please Enter Your username\"\r\n                        }\r\n                    ]}\r\n                    >\r\n                        <Input prefix={<UserOutlined/>} placeholder=\"username\"/>\r\n                </Form.Item>\r\n                </>\r\n            )}\r\n            <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required:true,\r\n                            message:\"Please Enter Your email address\"\r\n                        }\r\n                    ]}\r\n                    >\r\n                        <Input type=\"email\" prefix={<MailOutlined/>} placeholder=\"email address\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required:true,\r\n                            message:\"Please Enter Your password\"\r\n                        }\r\n                    ]}\r\n                    >\r\n                        <Input.Password type=\"password\" prefix={<LockOutlined/>} placeholder=\"password\"/>\r\n                </Form.Item>\r\n                {isLogin ||(\r\n                    <Form.Item\r\n                    name=\"confirmPassword\"\r\n                    rules={[\r\n                        {\r\n                            required:true,\r\n                            message:\"Please Repeat Your password\"\r\n                        }\r\n                    ]}\r\n                    >\r\n                        <Input.Password type=\"password\" prefix={<LockOutlined/>} placeholder=\"Confirm Password\"/>\r\n                </Form.Item>\r\n                )}\r\n                <Form.Item>\r\n                    <Button htmlType='Submit' typeof='primary'>\r\n                        {isLogin ?\"Log In\" :\"Join\"}\r\n                    </Button>\r\n                    <span style={{margin:\"0 10px 20px 0 px\"}}>Or</span>\r\n                    <Button type='link' onClick={switchMode}>\r\n                        {isLogin ?\"Register Now \": \"Have an Account? \"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>   \r\n        </Card>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AuthForm","E:\\snapbliss\\projectinstaverse\\client\\src\\components\\AppBar\\AppBar.js",["121"],[],"import React,{useState,useEffect} from 'react';\r\nimport {Link,useNavigate,useLocation} from \"react-router-dom\";\r\nimport {Layout,Image,Typography,Button,Avatar} from \"antd\";\r\nimport styles from './styles';\r\nimport Logo from \"../../images/Instaverse.png\";\r\nimport { useDispatch } from 'react-redux';\r\nimport {LOGOUT} from \"../../constants/actionTypes\";\r\nimport decode from 'jwt-decode';\r\nconst {Title}=Typography;\r\nconst {Header}=Layout;\r\n\r\nexport default function AppBar(){\r\n    const dispatch=useDispatch();\r\n    const navigate=useNavigate();\r\n    const location=useLocation();\r\n    const [user,setUser]=useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n    useEffect(()=>{\r\n        const token=user?.token;\r\n        if(token){\r\n            const decodedToken = decode(token);\r\n            if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n        setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n    },[location]);\r\n    const logout=()=>{\r\n        dispatch({type:LOGOUT});\r\n        navigate(\"/authform\");\r\n        setUser(null);\r\n    }\r\n     return (\r\n    <Header style={styles.header}>\r\n        <Link to=\"/\">\r\n        <div style={styles.header}>\r\n        <Image style={styles.image} width={45} preview={false} src={Logo}/>\r\n        &nbsp;\r\n        <Title style={styles.title}>Book</Title>\r\n        </div>\r\n        </Link>\r\n        {!user ?(\r\n            <Link to=\"/authform\">\r\n                <Button htmlType='button' style={styles.login}>\r\n                    Log In\r\n                </Button>\r\n            </Link>\r\n        ):\r\n        ( \r\n            <div style={styles.userInfo}>\r\n                <Avatar style={styles.avatar} alt=\"username\" size=\"large\">\r\n                    {user?.result?.username?.charAt(0)?.toUpperCase()}\r\n                </Avatar>\r\n                <Title style={styles.title} level={4}>\r\n                   {user?.result?.username}\r\n                </Title>\r\n                <Button onClick={logout} htmlType='button'>\r\n                    Log Out\r\n                </Button>\r\n            </div>\r\n        )}\r\n    </Header>\r\n  )\r\n}\r\n","E:\\snapbliss\\projectinstaverse\\client\\src\\reducers\\authentication.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\reducers\\stories.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\actions\\stories.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\actions\\authentication.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\Home\\styles.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\AuthForm\\styles.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\constants\\actionTypes.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\AppBar\\styles.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryForm\\index.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryList\\index.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryForm\\StoryForm.js",[],[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryList\\StoryList.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\api\\index.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\StoryForm\\styles.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\Story\\Story.js",[],[],"E:\\snapbliss\\projectinstaverse\\client\\src\\components\\Story\\styles.js",[],[],{"ruleId":"122","severity":1,"message":"123","line":124,"column":11,"nodeType":"124","messageId":"125","endLine":124,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":24,"column":7,"nodeType":"128","endLine":24,"endColumn":17,"suggestions":"129"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["130"],{"desc":"131","fix":"132"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"133","text":"134"},[939,949],"[location, logout, user?.token]"]